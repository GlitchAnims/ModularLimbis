//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /media/glitch/ExtraWorld/repos/ModularSkillScripts repos/ModularSkillScripts/Grammars/ModsaLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ModsaLang {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class ModsaLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, ID=3, NUMBER=4, WS=5, MUL=6, DIV=7, ADD=8, SUB=9;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "ID", "NUMBER", "WS", "MUL", "DIV", "ADD", "SUB"
	};


	public ModsaLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ModsaLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", null, null, null, "'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "ID", "NUMBER", "WS", "MUL", "DIV", "ADD", "SUB"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ModsaLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ModsaLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,9,56,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,
		2,7,7,7,2,8,7,8,1,0,1,0,1,1,1,1,1,2,4,2,25,8,2,11,2,12,2,26,1,3,4,3,30,
		8,3,11,3,12,3,31,1,3,1,3,4,3,36,8,3,11,3,12,3,37,3,3,40,8,3,1,4,4,4,43,
		8,4,11,4,12,4,44,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,0,0,9,1,1,3,2,
		5,3,7,4,9,5,11,6,13,7,15,8,17,9,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,
		10,13,13,32,32,60,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
		1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,1,19,1,0,0,
		0,3,21,1,0,0,0,5,24,1,0,0,0,7,29,1,0,0,0,9,42,1,0,0,0,11,48,1,0,0,0,13,
		50,1,0,0,0,15,52,1,0,0,0,17,54,1,0,0,0,19,20,5,40,0,0,20,2,1,0,0,0,21,
		22,5,41,0,0,22,4,1,0,0,0,23,25,7,0,0,0,24,23,1,0,0,0,25,26,1,0,0,0,26,
		24,1,0,0,0,26,27,1,0,0,0,27,6,1,0,0,0,28,30,7,1,0,0,29,28,1,0,0,0,30,31,
		1,0,0,0,31,29,1,0,0,0,31,32,1,0,0,0,32,39,1,0,0,0,33,35,5,46,0,0,34,36,
		7,1,0,0,35,34,1,0,0,0,36,37,1,0,0,0,37,35,1,0,0,0,37,38,1,0,0,0,38,40,
		1,0,0,0,39,33,1,0,0,0,39,40,1,0,0,0,40,8,1,0,0,0,41,43,7,2,0,0,42,41,1,
		0,0,0,43,44,1,0,0,0,44,42,1,0,0,0,44,45,1,0,0,0,45,46,1,0,0,0,46,47,6,
		4,0,0,47,10,1,0,0,0,48,49,5,42,0,0,49,12,1,0,0,0,50,51,5,47,0,0,51,14,
		1,0,0,0,52,53,5,43,0,0,53,16,1,0,0,0,54,55,5,45,0,0,55,18,1,0,0,0,6,0,
		26,31,37,39,44,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace ModsaLang
